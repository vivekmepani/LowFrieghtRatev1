@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@using PagedList.Mvc;
@using PagedList;
@using System.Web.Mvc.Extensions;

@model IEnumerable<LowFreightRate.Models.PostQuote.PostQuote>


    <h1>Quotes</h1>

    <p>
        Below are a few of the latest Quotes.
    </p>
    <div class="row">
        <div class="col-md-12">
            <br /><br /><br />
            <table class="table">
                <tr>
                    <th>Name</th>
                    <th>Number</th>
                    <th>Email</th>
                    <th>Origin</th>
                    <th>Destination</th>
                    <th>FreightServices</th>
                </tr>
            </table>
            <p class="pager">
                @if (ViewBag.HasPreviousPage)
                {
                    <a class="prev" href="@Url.Action("Dashboard", "Home", new { page = ViewBag.PreviousPage })">
                        &lt; Previous
                    </a>
                }

                @if (ViewBag.TotalPage > 0)
                {
                    for (var currentPage = 1; currentPage <= Math.Ceiling((ViewBag.TotalPage * 1.0) / ViewBag.PageSize); currentPage++)
                    {
                        <a href="@Url.Action("Dashboard", "Home", new { page = currentPage-1 })">
                            @currentPage&nbsp;
                        </a>
                    }
                }

                @if (ViewBag.HasNextPage)
                {
                    <a class="next" href="@Url.Action("Dashboard", "Home", new { page = ViewBag.NextPage })">
                        Next &gt;
                    </a>
                }
            </p>
            @foreach (var quote in Model)
            {
                @Html.Partial("_Quotes", quote)
            }
            <p class="pager">
                @if (ViewBag.HasPreviousPage)
                {
                    <a class="prev" href="@Url.Action("Dashboard", "Home", new { page = ViewBag.PreviousPage })">
                        &lt; Previous
                    </a>
                }

                @if (ViewBag.TotalPage > 0)
                {
                    for (var currentPage = 1; currentPage <= Math.Ceiling((ViewBag.TotalPage * 1.0) / ViewBag.PageSize); currentPage++)
                    {
                        <a href="@Url.Action("Dashboard", "Home", new { page = currentPage })">
                            @currentPage
                        </a>
                    }
                }
                &nbsp;
                @if (ViewBag.HasNextPage)
                {
                    <a class="next" href="@Url.Action("Dashboard", "Blog", new { page = ViewBag.NextPage })">
                        Next &gt;
                    </a>
                }
            </p>
        </div>
    </div>


